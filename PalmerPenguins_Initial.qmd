---
title: "Palmer Penguins Initial Analysis"
author: "Katie Duryea"
format: html
editor: visual
execute:
  keep-md: true
---

## Palmer Penguins

This is a test of Quarto functionality using the Palmer Penguins package.

```{r}
 library(tidyverse)
    library(palmerpenguins)
    
    penguins %>% head()

```

This code loads the `palmerpenguins` package and displays the top (or `head`) of the dataset.

## Data Manipulation

In this section, we will use R code to manipulate data. In particular, we'll learn how to filter rows, subset columns, group data, and compute summary statistics.

Questions to answer:

-   Does bill length vary by species?

-   Does mass vary by year?

-   Which penguin species are the largest?

    ### Frequency Tables

```{r}
penguins %>%
  count(island)
```

The above code produces a frequency table of penguins by island.

```{r}
penguins %>%
  count(species)
```

The above code produces a frequency table of penguins by species.

```{r}
penguins %>% 
  count(island, species)

```

The above code produces a frequency table for penguin species by island.

```{r}
penguins %>%
  count(island, species) %>%
  pivot_wider(names_from = species, values_from = n, values_fill = 0)
```

The code above changes the format of the table so that it is more readable.

To create an even better table, install and load the `kableExtra` package:

```{r}
library(kableExtra)
```

Create a frequency table for penguins species by island using the `kableExtra` package:

```{r}
penguins %>%
  count(island, species) %>%
  pivot_wider(names_from = species, values_from = n, values_fill = 0) %>%
  kable() %>%
  kable_styling(bootstrap_options = c("hover", "striped"))
```

Compute the average bill length for all penguins:

```{r}
penguins %>%
  summarize(mean_bill_length_mm = mean(bill_length_mm))
```

Tell R to ignore "N/A" values:

```{r}
penguins %>%
  summarize(mean_bill_length_mm = mean(bill_length_mm, na.rm = TRUE))
```

Include the median, standard deviation, minimum, 25th percentile, 75th percentile, and maximum bill lengths as well:

```{r}
penguins %>%
  summarize(
    min_bill_length = min(bill_length_mm, na.rm = TRUE),
    first_quartile_bill_length = quantile(bill_length_mm, 0.25, na.rm = TRUE),
    median_bill_length = median(bill_length_mm, na.rm = TRUE),
    mean_bill_length_mm = mean(bill_length_mm, na.rm = TRUE),
    third_quartile_bill_length = quantile(bill_length_mm, 0.75, na.rm = TRUE),
    standard_deviation_bill_length = sd(bill_length_mm, na.rm = TRUE)
    ) %>%
  pivot_longer(cols = everything())
```

Use kable to format the table:

```{r}
penguins %>%
  summarize(
    min_bill_length = min(bill_length_mm, na.rm = TRUE),
    first_quartile_bill_length = quantile(bill_length_mm, 0.25, na.rm = TRUE),
    median_bill_length = median(bill_length_mm, na.rm = TRUE),
    mean_bill_length_mm = mean(bill_length_mm, na.rm = TRUE),
    third_quartile_bill_length = quantile(bill_length_mm, 0.75, na.rm = TRUE),
    standard_deviation_bill_length = sd(bill_length_mm, na.rm = TRUE)
    ) %>%
  pivot_longer(cols = everything()) %>%
  kable() %>%
  kable_styling(bootstrap_options = c("hover", "striped"))
```

### Selecting specific columns and rows

We can select specific columns (using the `select()` function) or rows satisfying certain conditions (using the `filter()` function). For example, we can select only the `species`, `island`, `sex`, and `year` columns.

```{r}
penguins %>%
  select(species, island, sex, year)
```

We can use `filter()` to include only `Chinstrap` penguins.

```{r}
penguins %>%
  select(species, island, sex, year) %>%
  filter(species == "Chinstrap")
```

We can \*de\*-select the species column using the `select()` function and a minus (`-`) sign in front of the column name. We can also store this smaller data frame into a new object called `chinstraps` by using the arror (`<-`) operator.

```{r}
chinstraps <- penguins %>%
  select(species, island, sex, year) %>%
  filter(species == "Chinstrap") %>%
  select(-species)

chinstraps %>%
  head()
```

### Grouping and Summarizing Groups

We can use `group_by()` and `summarize()` to quickly compare summary statistics across groups. Let's compare the average and standard deviation in `bill_depth_mm` across the species groups.

```{r}
penguins %>%
  group_by(species) %>%
  summarise(
    mean_bill_depth_mm = mean(bill_depth_mm, na.rm = TRUE),
    sd_bill_depth_mm = sd(bill_depth_mm, na.rm = TRUE)
  )
```

The above code shows that Adelie and Chinstrap penguins have similar bill depths, but Gentoo penguins appear to have smaller bill depths.

## Data Visualization with `ggplot()`

This is in introduction to data visualization with `ggplot()`.

## Categorical variables

We can visualize categorical variables with a barplot:

```{r}
penguins %>%
  ggplot() +
  geom_bar(mapping = aes(x = species)) +
  labs(title ="Counts of Penguin Species",
       x = "Species", y = "Count")
```

Plot of penguins by island:

```{r}
penguins %>%
  ggplot() +
  geom_bar(mapping = aes(x = island)) +
  labs(title ="Counts of Penguins by Island",
       x = "Island", y = "Count")
```

### Numerical Variables

We can visualize a single numerical variable with a histogram (`geom_histogram()`), density (`geom_density()`), or boxplot (`geom_boxplot()`).

```{r}
penguins %>%
  ggplot() +
  geom_histogram(mapping = aes(x = bill_length_mm),
                 color = "white",
                 fill = "blue") +
  labs(title ="Distribution of Bill Lengths",
       x = "Bill Length (mm)", y = "Count")
```

The above code produces a histogram of bill length. It appears to be a bi-modal distribution.

Visualize bill length as a boxplot:

```{r}
penguins %>%
  ggplot() +
  geom_boxplot(aes(x = bill_length_mm),
                 color = "white",
                 fill = "blue") +
  labs(title ="Distribution of Bill Lengths",
       x = "Bill Length (mm)", y = "Count")
```

### Two Numerical Variables

We can explore a potential relationship between two numerical variables with a scatterplot.

```{r}
penguins %>%
  ggplot() +
  geom_point(mapping = aes(x = bill_depth_mm, y = bill_length_mm)) +
  labs(title = "Bill Depth and Length",
       x = "Bill Depth (mm)",
       y = "Bill Length (mm)")
```

Bill length may be correlated with depth, but it is not a clear correlation.

See if body mass is correlated with bill length:

```{r}
penguins %>%
  ggplot() +
  geom_point(mapping = aes(x = body_mass_g, y = bill_length_mm)) +
  labs(title = "Body Mass and Length",
       x = "Body mass (g)",
       y = "Bill Length (mm)")
```

Body mass and bill length appear to have a much stronger correlation!

### Two Categorical Variables

We can explore potential associations between pairs of categorical variables using barplots and fill.

```{r}
penguins %>%
  ggplot() +
  geom_bar(mapping = aes(x = island, fill = species)) +
  labs(title = "Species by Island",
       x = "Island",
       y = "Species")
```

The above plot shows that the species of penguins varies by island, but Adelie penguins are found on all three islands.

### One Numerical and One Categorical Variable

We can also ompare a numerical variable and a categorical variable using side-by-side boxplots, or faceted plots.

```{r}
penguins %>%
  ggplot() +
  geom_boxplot(mapping = aes(x = bill_depth_mm, y = species)) +
  labs(title = "Bill Depth by Species",
       x = "Bill Depth (mm)",
       y = "")

penguins %>%
  ggplot() +
  geom_histogram(mapping = aes(x = bill_depth_mm)) +
  facet_wrap(~species, ncol = 1) +
  labs(title = "Bill Depth by Species",
       x = "Bill Depth (mm)",
       y = "")
```

The above plot shows that Adelie and Chinstrap penguins have similar distributions of bill depth, but Gentoo penguois have smaller bill depths. It gives more insight on the differences between penguins rather than just comparing means.

## Advanced plotting

In this section, we will explore creating more complex plots. See the example below:

```{r}
penguins %>%
  filter(!is.na(sex)) %>%
  ggplot() +
  geom_point(mapping = aes(x = bill_length_mm, 
                           y = flipper_length_mm,
                           color = species,
                           shape = sex)) +
  geom_smooth(mapping = aes(x = bill_length_mm,
                            y = flipper_length_mm,
                            color = species)) +
  facet_grid(rows = vars(island), cols = vars(sex), scales = "free") +
  labs(title = "Flipper and Bill Lengths by Species and Sex",
       x = "Bill Length (mm)",
       y = "Flipper Length(mm)") +
  theme_light()
```
